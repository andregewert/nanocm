<?php
    /* @var $this \Ubergeek\NanoCm\Module\AdminArticlesModule */

    use Ubergeek\NanoCm\StatusCode;

    // TODO Anzeige von Freigabe-Status und Zeitpunkt der letzten Speicherung

    // TODO Auslagern der Javascript-Quellen in separate Dateien
?>
<div class="container">
    <form>
        <?php if ($this->article->id > 0) : ?>
            <h1>Artikel bearbeiten</h1>
        <?php else : ?>
            <h1>Artikel hinzuf&uuml;gen</h1>
        <?php endif; ?>
        <input type="hidden" id="input_article_id" value="<?php echo intval($this->article->id); ?>" />

        <div class="toolbar">
            <span class="left">
                <a id="button_save" class="button" href="javascript:void(0);" title="Artikel speichern">Speichern</a>
                <a id="button_preview" class="button" href="javascript:void(0);" title="Artikelvorschau &ouml;ffnen">Vorschau</a>
                <a id="button_cancel" class="button button-secondary" href="javascript:void(0);" title="Bearbeitung abbrechen">Abbrechen</a>
            </span>
            <span class="right" style="float: right; vertical-align: middle">
                <img class="spinner" id="toolbar_spinner" src="/ncm/img/spin.gif" />
                <a id="button_toggle_settings" class="button" href="javascript:void(0)" title="Artikeleinstellungen anzeigen">
                    <img src="/ncm/img/fatcow/16/cog.png" width="16" height="16" />Einstellungen
                </a>
                <a id="button_publish" class="button" href="javascript:void(0)" title="&Auml;nderungen speichern und Artikel freischalten">Freischalten</a>
            </span>
        </div>

        <div class="editform">
            <div class="editform_sidebar_right" id="article_settings_sidebar">
                <p>
                    <label>Freigabestatus</label>
                    <select id="input_article_status_code" tabindex="0">
                        <?php foreach ($this->availableStatusCodes as $code) : ?>
                            <option value="<?php echo $code; ?>"<?php if ($this->article->status_code == $code) echo ' selected="selected"'; ?>><?php echo StatusCode::convertStatusId($code); ?></option>
                        <?php endforeach; ?>
                    </select>
                </p>
                <p>
                    <label title="Zeitpunkt der Freischaltung / Anzeige">Startdatum</label>
                    <input type="date" id="input_article_start_date" value="<?php if ($this->article->start_timestamp != null) echo $this->article->start_timestamp->format('Y-m-d'); ?>" tabindex="0" />
                    <input type="time" id="input_article_start_time" value="<?php if ($this->article->start_timestamp != null) echo $this->article->start_timestamp->format('H:i'); ?>" tabindex="0" />
                </p>
                <p>
                    <label title="Zeitpunkt der Anzeige-Abschaltung / Deaktivierung">Enddatum</label>
                    <input type="date" id="input_article_stop_date" value="<?php if ($this->article->stop_timestamp != null) echo $this->article->stop_timestamp->format('Y-m-d'); ?>" tabindex="0" />
                    <input type="time" id="input_article_stop_time" value="<?php if ($this->article->stop_timestamp != null) echo $this->article->stop_timestamp->format('H:i'); ?>" tabindex="0" />
                </p>
                <p>
                    <label title="Offizieller Zeitpunkt der Veröffentlichung">Ver&ouml;ffentlichungsdatum</label>
                    <input type="date" id="input_article_publishing_date" value="<?php if ($this->article->publishing_timestamp != null) echo $this->article->publishing_timestamp->format('Y-m-d'); ?>" tabindex="0" />
                    <input type="time" id="input_article_publishing_time" value="<?php if ($this->article->publishing_timestamp != null) echo $this->article->publishing_timestamp->format('H:i'); ?>" tabindex="0" />
                </p>
                <p>
                    <label title="Kommentierung dieses Artikel zulassen" for="input_article_enable_comments">Kommentare zulasen</label>
                    <input type="checkbox" value="1" id="input_article_enable_comments"<?php if ($this->article->enable_comments) echo ' checked="checked"'; ?> tabindex="0" />
                </p>
                <p>
                    <label title="Empfang von Trackbacks für diesen Artikel zulassen" for="input_article_enable_trackbacks">Trackbacks zulassen</label>
                    <input type="checkbox" value="1" id="input_article_enable_trackbacks"<?php if ($this->article->enable_trackbacks) echo ' checked="checked"'; ?> tabindex="0" />
                </p>
                <p>
                    <label title="Autor des Artikels">Autor</label>
                    <?php if ($this->article->author_id != null) : ?>
                        <?php echo $this->htmlEncode($this->orm->convertUserIdToName($this->article->author_id)); ?>
                    <?php endif; ?>
                    <input type="hidden" id="input_article_author_id" value="<?php echo intval($this->article->author_id); ?>" />
                    <?php // TODO Autor-Auswahl per Popup oder Selectbox? -> zumindest Admins sollten einen Autoren auswählen können ?>
                </p>
                <p>
                    <label title="Haupt-Illustration für diesen Artikel">Artikelbild</label>
                    <!-- Hier sollte pro Artikel ein Eintrag aus der Mediendatenbank auswählbar sein; die Verwendung und der Zuschnitt erfolgen je nach Ansicht / Template automatisch -->
                </p>
                <hr>
                <p>
                    <label title="Zeitpunkt der letzten Speicherung">Zuletzt gespeichert</label>
                    <input type="date" readonly="readonly" id="input_article_modification_date" value="<?php if ($this->article->modification_timestamp != null) echo $this->article->modification_timestamp->format('Y-m-d'); ?>" tabindex="-1" />
                    <input type="time" readonly="readonly" id="input_article_modification_time" value="<?php if ($this->article->modification_timestamp != null) echo $this->article->modification_timestamp->format('H:i'); ?>" tabindex="-1" />
                </p>
            </div>

            <div class="row">
                <input class="big" type="text" id="input_article_headline" placeholder="Headline" value="<?php echo $this->htmlEncode($this->article->headline); ?>" autofocus="autofocus" tabindex="0" />
            </div>

            <div class="row imgtoolbar" style="margin-bottom: -1em">
                <a class="button" title="Fett" href="javascript:void(0)" onclick="articlesEdit.surroundSelectionWith('**', '**');" tabindex="10"><img src="/ncm/img/fatcow/16/text_bold.png" /></a>
                <a class="button" title="Kursiv" href="javascript:void(0)" onclick="articlesEdit.surroundSelectionWith('*', '*');" tabindex="10"><img src="/ncm/img/fatcow/16/text_italic.png" /></a>
                <a class="button" title="Unterstrichen" href="javascript:void(0)" onclick="articlesEdit.surroundSelectionWith('_', '_');" tabindex="10"><img src="/ncm/img/fatcow/16/text_underline.png" /></a>
                <a class="button" title="Durchgestrichen" href="javascript:void(0)" onclick="articlesEdit.surroundSelectionWith('~', '~');" tabindex="10"><img src="/ncm/img/fatcow/16/text_strikethroungh.png" /></a>
                <a class="button" title="Hochgestellt" href="javascript:void(0)" onclick="articlesEdit.surroundSelectionWith('^', '^');" tabindex="10"><img src="/ncm/img/fatcow/16/text_superscript.png" /></a>
                <a class="button" title="Tiefgestellt" href="javascript:void(0)" onclick="articlesEdit.surroundSelectionWith('', '');" tabindex="10"><img src="/ncm/img/fatcow/16/text_subscript.png" /></a>
                <a class="button" title="Kapit&auml;lchen" href="javascript:void(0)" onclick="articlesEdit.surroundSelectionWith('|', '|');" tabindex="10"><img src="/ncm/img/fatcow/16/text_smallcaps.png" /></a>
                <a class="button" title="Horizontaler Trennstrich" href="javascript:void(0)" onclick="articlesEdit.insertTextAtCaret('\n---\n');" tabindex="10"><img src="/ncm/img/fatcow/16/text_horizontalrule.png" /></a>

                <!-- Sonderzeichen einfügen -->
                <span class="imgtoolbar_popupbutton">
                    <span class="imgtoolbar_popup" style="width: 300px; height: 180px; overflow: auto">
                        <ul class="imgtoolbar_keyboard">
                            <?php foreach ($this->availableSpecialChars as $char => $desc) : ?>
                                <li>
                                    <a href="javascript:articlesEdit.insertTextAtCaret('<?php echo '&#' . $char . ';'; ?>');" title="<?php echo $this->htmlEncode($desc); ?>" tabindex="9"><?php echo '&#' . $char . ';'; ?></a>
                                </li>
                            <?php endforeach; ?>
                        </ul>
                    </span>
                    <a class="button" title="Sonderzeichen einf&uuml;gen" href="javascript:void(0)" tabindex="10"><img src="/ncm/img/fatcow/16/text_letter_omega.png" /></a>
                </span>

                <!-- TODO Dialogfenster für Bildauswahl öffnen -->
                <a class="button" title="Bild einf&uuml;gen" href="javascript:void(0)" tabindex="10"><img src="/ncm/img/fatcow/16/image_add.png" /><span>Bild</span></a>

                <!-- Emoji-Tastatur -->
                <span class="imgtoolbar_popupbutton">
                    <span class="imgtoolbar_popup" style="width: 500px; height: 320px; overflow: auto">
                        <?php foreach (Ubergeek\NanoCm\Util::getEmojiDictionary() as $group => $emojis) : ?>
                            <label class="small"><?php echo \Ubergeek\NanoCm\Util::htmlEncode($group); ?></label>
                            <ul class="imgtoolbar_keyboard">
                                <?php foreach ($emojis as $emoji) : ?>
                                    <li class="tone_<?php echo $this->htmlEncode($emoji->tone); ?>">
                                        <a style="font-family: Roboto, 'Apple Color Emoji';" href="javascript:articlesEdit.insertTextAtCaret('<?php echo $emoji->html; ?>');" title="<?php echo $this->htmlEncode($emoji->description); ?>" tabindex="9"><?php echo $emoji->html; ?></a>
                                    </li>
                                <?php endforeach; ?>
                            </ul>
                        <?php endforeach; ?>
                    </span>
                    <a class="button" title="Emoji-Tastatur einblenden" href="javascript:void(0)" tabindex="10"><img src="/ncm/img/fatcow/16/emotion_amazing.png" /></a>
                </span>
            </div>

            <div class="row">
                <textarea style="height: 36rem" id="input_article_content" tabindex="0"><?php echo $this->htmlEncode($this->article->content); ?></textarea>
            </div>

            <div class="row">
                <input type="text" id="input_article_tags" placeholder="Schlagworte (mit Komma getrennt)" value="<?php if (is_array($this->article->tags)) echo $this->htmlEncode(join(', ', $this->article->tags)); ?>" tabindex="0" />
            </div>
        </div>
    </form>
</div>

<script type="text/javascript">
    var articlesEdit = new (function ArticlesEdit() {
        var page = this;

        page.isBusy = false;
        page.autoSaveTimer = null;

        page.showLoadingIndicator = function() {
            $('#toolbar_spinner').addClass('loading');
            page.isBusy = true;
        };

        page.hideLoadingIndicator = function() {
            $('#toolbar_spinner').removeClass('loading');
            page.isBusy = false;
        };

        page.toggleSettings = function() {
            if ($('#article_settings_sidebar').is(':visible')) {
                $('#article_settings_sidebar').hide();
            } else {
                $('#article_settings_sidebar').show();
            }
        };

        page.surroundSelectionWith = function(contentBefore, contentAfter) {
            var textArea = document.getElementById('input_article_content');
            textArea.focus();

            if (textArea.setSelectionRange) {
                var c = textArea.scrollTop;
                var e = textArea.selectionStart;
                var f = textArea.selectionEnd;

                textArea.value = textArea.value.substring(0, textArea.selectionStart)
                    + contentBefore
                    + textArea.value.substring(textArea.selectionStart, textArea.selectionEnd)
                    + contentAfter
                    + textArea.value.substring(textArea.selectionEnd, textArea.value.length);
                textArea.selectionStart = e;
                textArea.selectionEnd = f + contentBefore.length + contentAfter.length;
                textArea.scrollTop = c;
            } else {
                if (document.selection && document.selection.createRange) {
                    textArea.focus();
                    var b = document.selection.createRange();
                    if (b.text != "") {
                        b.text = contentBefore + b.text + contentAfter;
                    } else {
                        //b.text = contentBefore + "REPLACE" + contentAfter;
                        console.log('???');
                    }
                    textArea.focus();
                }
            }
        };

        page.insertTextAtCaret = function(content) {
            var textArea = document.getElementById('input_article_content');

            // IE
            if (document.selection) {
                textArea.focus();
                var sel = document.selection.createRange();
                sel.text = content;
            }

            // Others
            else if (textArea.selectionStart || textArea.selectionStart === '0') {
                var startPos = textArea.selectionStart;
                var endPos = textArea.selectionEnd;
                textArea.value = textArea.value.substring(0, startPos) + content + textArea.value.substring(endPos, textArea.value.length);
                textArea.focus();
                textArea.selectionStart = startPos + content.length;
                textArea.selectionEnd = startPos + content.length;
            }
            else {
                textArea.value += content;
                textArea.focus();
            }
        };

        page.saveArticle = function() {
            page.showLoadingIndicator();

            $.ajax('/admin/articles/ajax/save', {
                cache:      false,
                type:       'POST',
                dataType:   'JSON',
                data:       {
                    id:                     $('#input_article_id').val(),
                    author_id:              $('#input_article_author_id').val(),
                    status_code:            $('#input_article_status_code').val(),
                    headline:               $('#input_article_headline').val(),
                    teaser:                 '',
                    content:                $('#input_article_content').val(),
                    start_timestamp:        ($('#input_article_start_date').val() + ' ' + $('#input_article_start_time').val()).trim(),
                    stop_timestamp:         ($('#input_article_stop_date').val() + ' ' + $('#input_article_stop_time').val()).trim(),
                    publishing_timestamp:   ($('#input_article_publishing_date').val() + ' ' + $('#input_article_publishing_time').val()).trim(),
                    enable_trackbacks:      $('#input_article_enable_trackbacks').prop('checked'),
                    enable_comments:        $('#input_article_enable_comments').prop('checked'),
                    tags:                   $('#input_article_tags').val()
                }
            }).done(function(data) {
                // ID zurückschreiben
                // Anzeige (Freigabe-)Status aktualisieren
                // Anzeige letzter Speicherzeitpunkt aktualisieren

                console.log(data);

                $('#input_article_id').val(data.id);
                if (data.publishing_timestamp != null) {
                    $('#input_article_publishing_date').val(data.publishing_timestamp.date.substr(0, 10));
                    $('#input_article_publishing_time').val(data.publishing_timestamp.date.substr(11, 5));
                } else {
                    $('#input_article_publishing_date').val('');
                    $('#input_article_publishing_time').val('');
                }
                if (data.modification_timestamp != null) {
                    $('#input_article_modification_date').val(data.modification_timestamp.date.substr(0, 10));
                    $('#input_article_modification_time').val(data.modification_timestamp.date.substr(11, 5));
                } else {
                    $('#input_article_modification_date').val('');
                    $('#input_article_modification_time').val('');
                }


            }).always(function() {
                page.hideLoadingIndicator();
            });
        };

        page.autoSaveArticle = function() {
            // Soll sich das automatische Speichern vom manuellen
            // Speichern unterscheiden?
            if (page.isBusy) {
                console.log("Page is busy - skip auto saving");
            } else {
                console.log("Autosave");
                page.saveArticle();
            }
        };

        page.openPreview = function() {
            // TODO implementieren
            alert('Vorschau öffnen');
        };

        page.cancelEdit = function() {
            if (confirm('Wollen Sie die Seite wirklich verlassen? Nicht gemachte Änderungen gehen verloren!')) {
                // Redirect auf Artikel-Übersicht
                // Letzte Suchparameter sollten beibehalten werden!
                // TODO implementieren
                window.location.href = '/admin/articles/';
            }
        };

        // Event handler setzen

        /*
        $(window).on('beforeunload', function() {
            console.log('beforeunload');
            return confirm('Wollen Sie die Seite wirklich verlassen? Nicht gemachte Änderungen gehen verloren!');
        });
        */

        $('#button_save').click(function() {
            page.saveArticle();
        });

        $('#button_cancel').click(function() {
            page.cancelEdit();
        });

        $('#button_publish').click(function() {
            if (confirm('Wollen Sie den Artikel wirklich freigeben?')) {
                $('#input_article_status_code').val(0);
                page.saveArticle();
            }
        });

        $('#button_preview').click(function() {
            page.openPreview();
        });

        $('#button_toggle_settings').click(function() {
            page.toggleSettings();
        });

        // TODO Autosave sollte konfigurierbar sein
        //page.autoSaveTimer = window.setInterval(page.autoSaveArticle, 60000);
    })();
</script>